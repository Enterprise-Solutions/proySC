<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/genericoActivoBloqueadoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/admUsuarioStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/admPersonasDisponiblesStore.js"></script>
<script type="text/javascript">
var mainStore = admUsuarioStore;

function hideBloque()
{
	var cajaMensaje = Ext.getCmp('messageBox');
	if(cajaMensaje){
		cajaMensaje.addClass('oculto');
	}	
}

function formularioUsuario(isNew, data, isReadOnly)
{
	return {
		xtype: 'form',
		title: (isReadOnly)?('Ver Usuario'):((isNew)?('Crear Usuario'):('Editar Usuario')),
		cls: 'ladoDerecho',
		bodyCssClass: 'formularioGeneral',
		layout: 'form',
		autoHeight: true,
		defaults:{xtype: ((isReadOnly)?('displayfield'):('textfield'))},
		items:[
				(isNew)?({
					//aca es creacion
					xtype: 'combo',
					fieldLabel: 'Nombre / Doc.',
					cls: 'searchIcon',
					hideTrigger: true,
					width: 250,
					allowBlank: false,
					minChars: 2,
					cls: 'searchIcon',
					displayField: 'mostrar',
					valueField: 'org_parte_id',
					forceSelection: true,
					mode: 'remote',
					triggerAction: 'all',
					listWidth: 350,
					queryDelay: 1000,
					queryParam: 's[nombre]',
					store: admPersonasDisponiblesStore,
					hiddenName: 'org_parte_id'
		       }):((!isReadOnly)?(((
	    		   {
		    		   xtype: 'hidden',
		    		   name: 'adm_usuario_id',
		    		   value: data.adm_usuario_id
	    		   }
			       ))
			       ):(
					       //aca es visualizacion
			    		   {
			    		   }
					 ))
		       ,
			    {
		       		xtype: 'displayfield',
		       		value: (isNew)?(null):(data.apellido + ', ' + data.nombre),
		       		name: 'displayNombre',
		       		fieldLabel: 'Nombre',
	       			hidden: (isNew)?(true):(false)
					//aca es edicion
		       },
		       {
		    	   xtype: 'displayfield',
		    	   value: (isNew)?(null):(data.documento_identidad),
		       		name: 'displayDocumento',
		       		fieldLabel: 'Documento',
		       		hidden: (isNew)?(true):(false)
		       },
		       {
		    	   xtype: 'radiogroup',
			       name: 'estado',
			       hidden: (isNew)?(true):((isReadOnly)?(true):(false)),
			       disabled: (isNew)?(true):((isReadOnly)?(true):(false)),
			       fieldLabel: 'Estado',
			       columns: 2,
			       items:[
			              {inputValue: 'A', name: 'est', boxLabel: 'Activo',disabled: (isNew)?(true):((isReadOnly)?(true):(false)), checked: (isNew)?(false):((isReadOnly)?(false):((data.estado == 'A')?(true):(false)))},
			              {inputValue: 'B', name: 'est', boxLabel: 'Bloqueado', disabled: (isNew)?(true):((isReadOnly)?(true):(false)), checked: (isNew)?(false):((isReadOnly)?(false):((data.estado == 'B')?(true):(false)))}
					]
		       },
		       {
			       xtype: 'checkbox',
			       name: 'cambiar_contrasenha',
			       hidden: (isNew)?(true):((isReadOnly)?(true):(false)),
			       fieldLabel: 'Cambiar Contrase&ntilde;a',
			       checked: false,
			       listeners:{
				        'check':function(thisCheckBox, checked){
							if(checked)
							{
								//habilitar contrasenhas
								var padre = thisCheckBox.ownerCt;
								var campo = padre.find('name','contrasenha');
								if(campo.length>0)
								{
									campo[0].setDisabled(false);
								}

								//habilitar contrasenhas
								var campo = padre.find('name','confirmacion');
								if(campo.length>0)
								{
									campo[0].setDisabled(false);
								}
							}
							else
							{
								//deshabilitar contrasenhas
								//habilitar contrasenhas
								var padre = thisCheckBox.ownerCt;
								var campo = padre.find('name','contrasenha');
								if(campo.length>0)
								{
									campo[0].setDisabled(true);
								}

								//habilitar contrasenhas
								var campo = padre.find('name','confirmacion');
								if(campo.length>0)
								{
									campo[0].setDisabled(true);
								}
							}
					     }
				   }
		       },
		       {
			       fieldLabel: 'Contrase&ntilde;a',
			       name: 'contrasenha',
			       width: 115,
			       inputType: 'password',
			       maxLength: 40,
			       hidden: (!isReadOnly)?(false):(true),
	    		   disabled: (isNew)?(false):(true),
			       allowBlank: false
		       },
		       {
			       fieldLabel: 'Repetir Contrase&ntilde;a',
			       name: 'confirmacion',
			       width: 115,
			       inputType: 'password',
			       maxLength: 40,
			       hidden: (!isReadOnly)?(false):(true),
	    		   disabled: (isNew)?(false):(true),
			       allowBlank: false
		       },
		       {
			       xtype: 'container',
			       layout: 'column',
			       defaults:{style: {margin: '5px'}},
			       items:[
							{
							    xtype: 'button',
							    text: 'Guardar',
							    hidden: isReadOnly,
							    handler: function(b,e){
								       //verificar si esta todo ok
								       var mainForm = b.ownerCt.ownerCt;
								       basicForm = mainForm.getForm();
								       if(basicForm.isValid())
								       {
									       var valores = basicForm.getFieldValues();
									       console.log('valores',valores);
									       
									       if(valores.contrasenha != valores.confirmacion)
									       {
										       Ext.Msg.alert('Aviso','La contrase&ntilde;a y su confirmaci&oacute;n son distintas');
										       return;
									       }

									       if(valores.adm_usuario_id)//edicion
									       {
										       //obtenemos valor del estado
										       valores.estado = valores.estado.inputValue;
										       
									    	   Ajax.PostElement.request({
												   url: baseURL + '/adm/usuario/put',
												   success: function(response, opt){
													   mainStore.reload();
												   },
												   jsonData:{
												       'put': valores,
													   'formulario': mainForm.id
												   }
											   });
									       }
									       else//creacion
									       {
									    	   Ajax.PostElement.request({
												   url: baseURL + '/adm/usuario/post',
												   success: function(response, opt){
													   mainStore.reload();
												   },
												   jsonData:{
												       'post': valores,
													   'formulario': mainForm.id
												   }
											   });
									       }
									       
									       
								       }
								       else
									   {
										   Ext.Msg.alert('Aviso','Hay campos inv&aacute;lidos');
									   }       
								   }
							},
							{
								xtype: 'button',
								text: (!isReadOnly)?('Cancelar'):('Cerrar'),
								handler: function(b,e){
									var mainForm = b.ownerCt.ownerCt;
							        var padre = mainForm.ownerCt;
							        padre.remove(mainForm);
								}
							}
				   ]
		       }
		],
		listeners:{
			'render':function(){
				hideBloque();
			}
		}
	};	
}

function verUsuario(id)
{
	
	var registro = mainStore.getById(id);
	
	if(registro)
	{
		var destino = Ext.getCmp('formContainer');
		if(destino)
		{
			destino.removeAll();
			var addedEl = destino.add(formularioUsuario(false, registro.data, true));
			destino.doLayout();
			addedEl.body.highlight();
		}
	}
}

function borrarUsuario(id)
{
	Ext.Msg.confirm('Borrar','Desea borrar el elemento?', function(idButt){
		if(idButt == 'yes')
		{
			Ajax.PostElement.request({
				url: baseURL + '/adm/usuario/delete',
				success: function(response, opt){
					mainStore.reload();
				},
				jsonData:{
					'delete':[id]
				}
	 		});
		}
	});
}

function editarUsuario(id)
{
	
	var registro = mainStore.getById(id);
	
	if(registro)
	{
		var destino = Ext.getCmp('formContainer');
		if(destino)
		{
			destino.removeAll();
			var addedEl = destino.add(formularioUsuario(false, registro.data, false));
			destino.doLayout();
			addedEl.body.highlight();
		}
	}
}




viewContainer.bodyPanel = [{
	layout: 'fit',
	xtype: 'container',
	autoHeight: true,
	cls: 'fittedContainer',
	items: [
			{
				xtype: 'container',
				autoHeight: true,
				id: 'secondMainContainer',
				layout: 'column',
				items:[
						{
							xtype: 'container',
							columnWidth: .65,
							layout: 'anchor',
							items:[
									{
										xtype: 'container',
										html: 'Mantener Usuario',
										cls: 'mainTitle'
									},
									{
				       	       			xtype: 'container',
				       	       			itemId: 'gridContainer',
				       	       			cls: 'gridContainer',
				       	       			layout: 'anchor',
				       	       			items: [
				       	       			        {
					       	       			        xtype: 'toolbar',
					       	       			        style:{padding:'5px'},
					       	       			        items:[
					       	       			               {
						       	       			               xtype: 'displayfield',
						       	       			               style:{margin: '0 5px'},
						       	       			         	   value: 'Usuario: '
					       	       			               },
					       	       			               {
						       	       			               xtype: 'textfield',
						       	       			               name: 'nombre',
						       	       			               width: 75
					       	       			               },
					       	       			         	   {
						       	       			               xtype: 'displayfield',
						       	       			               style:{margin: '0 5px'},
						       	       			         	   value: 'Estado: '
				       	       			                   },
				       	       			             		{
      															hiddenName: 'estado',
      															width: 75,
      															value: 'A',
      															forceSelection: true,
      															valueField: 'id',
      															displayField:'valor',
      															xtype: 'combo',
      															store: genericoActivoBloqueadoStore,
      															typeAhead:true,
      															mode:'local'
  															},
					       	       			                  '->',
					       	       			         		{
						       	       			               xtype: 'button',
						       	       			         	   iconCls: 'addIcon',
						       	       			               text: 'Buscar',
						       	       			               handler: function(b,e){
																    var padre = b.ownerCt;
																    //obtener valor del campo de texto
																    var campo = padre.find('name','nombre');
																    if(campo.length>0)
																    {
																	    campo = campo[0];
																	    mainStore.setBaseParam('s[nombre]',campo.getValue());
																    }

																    campo = padre.find('hiddenName','estado');
																    if(campo.length>0)
																    {
																	    campo = campo[0];
																	    mainStore.setBaseParam('s[estado]',campo.getValue());
																    }
																    
																    mainStore.load();
								       	       			       }
					       	       			               },
					       	       			         		{
						       	       			               xtype: 'button',
						       	       			         	   iconCls: 'addIcon',
						       	       			               text: 'Limpiar',
						       	       			               handler: function(b,e){
																    var padre = b.ownerCt;
																    //obtener valor del campo de texto
																    var campo = padre.find('name','nombre');
																    if(campo.length>0)
																    {
																	    campo = campo[0];
																	    campo.setValue(null);
																	    mainStore.setBaseParam('s[nombre]',null);
																	    
																    }

																    campo = padre.find('hiddenName','estado');
																    if(campo.length>0)
																    {
																	    campo = campo[0];
																	    campo.setValue('A');
																	    mainStore.setBaseParam('s[estado]','A');
																	    
																    }
																    
																    mainStore.load();
								       	       			       }
					       	       			               }
							       	       			]
				       	       			        },
				       	       					{
				               						xtype: 'grid',
				               						height: 300,
				               						id: 'mainGrid',
				               						stripeRows: true,
				               						loadMask: true,
				               						sm: new Ext.grid.CellSelectionModel(),
				               						viewConfig: {
				               					        forceFit: true,
				               					        emptyText: 'Sin Registros',
				               					        loadingText: 'Cargando .. '
				               						},
				               						store: mainStore,
				               						cm: new Ext.grid.ColumnModel([
														{ header: "Apellido", dataIndex: 'apellido', width: 120},
														{ header: "Nombre", dataIndex: 'nombre',  width: 120},
														{ header: "Documento", dataIndex: 'documento_identidad',  width: 120},
														{ header: "Estado", dataIndex: 'estado_usuario',  width: 75},
														{ header: "Roles", dataIndex: 'roles',  width: 100, renderer: function(v,meta,record){
															if(v)
																return v;
															return '-';
														}},
														{ header: "Ver", dataIndex: null,  width: 32, align: 'center', renderer: function(v,meta,record){
															return '<div class="viewIcon" onclick="verUsuario(' + record.data.adm_usuario_id + ')"></div>';
														}},
														{ header: "Editar", dataIndex: null,  width: 32, align: 'center', renderer: function(v,meta,record){
															return '<div class="editIcon" onclick="editarUsuario(' + record.data.adm_usuario_id + ')"></div>';
														}},
														{ header: "Borrar", dataIndex: null,  width: 32, align: 'center', renderer: function(v,meta,record){
															return '<div class="deleteIcon" onclick="borrarUsuario(' + record.data.adm_usuario_id + ')"></div>';
														}}
														])
				           						}
				       	       			]
				       	   			},
				       	   			{
				       	       			xtype: 'toolbar',
				       	       			layout: 'toolbar',
				       	       			cls: 'pagingContainer',
				       	       			items:[
				       	       			        {
					       	       			        xtype: 'button',
					       	       			        iconCls: 'addIcon',
					       	       			        text: 'Agregar',
													handler: function(b,e){
														//buscamos destino
														var destino = Ext.getCmp('formContainer');
														if(destino)
														{
															destino.removeAll();
															var addedEl = destino.add(formularioUsuario(true, null, false));
															destino.doLayout();
															addedEl.body.highlight();
														}
													}
				       	       			        },
						       	       			'->',
				       	       	   				{
				       	       	       				xtype: 'paging',
				       	       	       				displayInfo: true,
				       	       	       				store: mainStore,
				       	       	       				pageSize: 10,
				       	       	       				preprendButtons: true
				       	       	   				}
				       	       			]
				       	   			}
							]
						},
						{
							xtype: 'container',
							columnWidth: .35,
							layout: 'anchor',
							items:[
			    					{
			    						xtype: 'container',
			    						layout: 'anchor',
			    						cls: 'oculto',
			    						id: 'messageBox',
			    						items:[
			    						       {
			        						       xtype: 'container',
			    						    	   html: 'Generico'
			    						       }
			    					
			   	    					]
			    					},
							       {
									     xtype: 'container',
									     layout: 'anchor',
									     id: 'formContainer'
							       }
									/*{
										xtype: 'panel',
										title: 'Crear Org',
										cls: 'ladoDerecho',
										layout: 'anchor',
										height: 200,
										items:[]
									}*/
							]
						}
				]
			}
	]
},
{
	xtype: 'container',
	columnWidth: 1,
	layout: 'column',
	cls: 'quickAccessBottom',
	items:[
			{
				cls: 'dataBottom',
				html: 'Agregar Organizacion',
				xtype: 'container'
			},
			{
				cls: 'dataBottom',
				html: 'Agregar Otra Cosa',
				xtype: 'container'
			},
			{
				cls: 'dataBottom',
				html: 'Ir Para Otro Lado',
				xtype: 'container'
			}				
	]
}];
</script>