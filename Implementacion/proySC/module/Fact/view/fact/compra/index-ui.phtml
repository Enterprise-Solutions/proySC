<!-- primero stores siempre -->
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/factCompraDetalleStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/genericoProductoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/genericoSiNoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockImpuestoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockCategoriaStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockMarcaStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/contMonedaStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/orgRolesDePartesProveedorStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/orgParteTipoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/orgParteStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/orgDocumentoTipoStore.js"></script>

<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockEstadoFacturaStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockEstadoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockGarantiaTipoStore.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/stores/stockArticuloStore.js"></script>
<!-- despues lo demas -->
<script type="text/javascript" src="<?=$this->basePath();?>/js/common/ventanaModal.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/forms/formularioEmpresa.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/forms/formularioPersona.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/forms/stockArticulo.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/forms/orgParteProveedor.js"></script>
<script type="text/javascript" src="<?=$this->basePath();?>/js/common/hideBloque.js"></script>
<script type="text/javascript">

var mainStore = factCompraDetalleStore;

mainStore.on('remove', function(thisStore, record, index){
	console.log('remove', thisStore, record, index);
});

var monedaDecimales = false;
var cantDecimalesMoneda = -1;

guardarCompraHandlerCallback = function(options, success, response)
{
	console.log(options, success, response);
	
	var formulario = Ext.getCmp('mainForm');
	if(formulario)
		formulario.getEl().unmask();
};

guardarCompraHandler = function(b,e)
{
	//vemos si esta todo ok el formulari
	var formulario = Ext.getCmp('mainForm');
	if(formulario)
	{
		var basicForm = formulario.getForm();
		
		//obtenemos los datos
		var valores = basicForm.getFieldValues();
		
		console.log('valores',valores);
		
		if(!basicForm.isValid())
		{
			Ext.Msg.alert('Aviso','Hay campos invalidos');
			return;
		}
		
		//obtenemos los datos
		var valores = basicForm.getFieldValues();
		
		console.log('valores',valores);
		
		//verificamos que hayan registros
		var records = mainStore.getRange();
		
		console.log('records',records);
		
		if(records.length == 0)
		{
			Ext.Msg.alert('Aviso','La compra no tiene productos');
			return;
		}

		var registros = [];

		for(var x=0; x<records.length;x++)
		{
			registros.push(records[x].data);
		}
		
		//mascara
		formulario.getEl().mask('Enviando...');

		var datos = {
			'post':{
				'Ingreso':{
					cont_moneda_id: valores.cont_moneda_id,
					codigo: '--',
					doc_nro: valores.factura_nro.join('-'),
					doc_fecha: valores.fecha,
					doc_tipo: 'F',
					condicion: 'C',
					estado: valores.estado_factura
				},
				'Detalle':registros
			}
		};
		
		
		console.log('datos',datos);
		
		Ajax.PostElement.request({
				url: baseURL + '/fact/compra/post',
				callback: guardarCompraHandlerCallback,
				jsonData: datos
			});	
		
	}
				
};

quitarArticuloCompra = function(id)
{
	var record = mainStore.getById(id);
	if(record)
		mainStore.remove(record);
		
		
	var formulario = Ext.getCmp('mainForm');
			if(formulario)
			{
				var basicForm = formulario.getForm();
				
				console.log('basicForm',basicForm);
				
				//definimos el total
				var totalAdd = record.data.cantidad * record.data.costo_unit; //se suma al total
				
				console.log('totalAdd',totalAdd);
				
				var sumarIVA;
				if(record.data.porc_impuesto == 10)
				{
					sumarIVA = totalAdd / 11;
					var campo = basicForm.findField('iva_10_display');
					if(campo)
						campo.setValue(campo.getValue() - sumarIVA);
				}
				else if(record.data.porc_impuesto == 5)
				{
					sumarIVA = totalAdd / 21;
					var campo = basicForm.findField('iva_5_display');
					if(campo)
						campo.setValue(campo.getValue() - sumarIVA);
				}
				else
				{
					sumarIVA = 0;
					var campo = basicForm.findField('iva_exenta_display');
					if(campo)
						campo.setValue(campo.getValue() - sumarIVA);
				}
				
				//aplicar a los campos
				var total = basicForm.findField('valor_total_trans_display');
				if(total)
				{
					console.log(total);
					total.setValue(total.getValue() - totalAdd);
				}
				
				var total_iva = basicForm.findField('total_iva_display');
				if(total_iva)
				{
					total_iva.setValue(total_iva.getValue() - sumarIVA);
				}
			}
};

agregarArticuloCompraCallback = function(options, success, response)
{
	var grilla = Ext.getCmp('mainGrid');
	var bloque = Ext.getCmp('bloqueArticulo');
	
	console.log('agregarArticuloCompraCallback',options, success, response);
	if(success)
	{
		//var datos = Ext.decode(response.responseText);
		var respuesta = Ext.decode(response.responseText);
		
		if(respuesta.exitoso)//se valido insercion
		{
			console.log('resp',respuesta);
			//creamos registro en el main store
			var nuevoRegistro = new mainStore.recordType(respuesta, respuesta.stock_articulo_id);
			console.log('nuevoRegistro',nuevoRegistro);
			mainStore.insert(0, nuevoRegistro);
			//una vez insertado tenemos que actualizar nuestro campos de calculos de iva y demas
			
			var formulario = Ext.getCmp('mainForm');
			if(formulario)
			{
				var basicForm = formulario.getForm();
				
				console.log('basicForm',basicForm);
				
				//definimos el total
				var totalAdd = nuevoRegistro.data.cantidad * nuevoRegistro.data.costo_unit; //se suma al total
				
				console.log('totalAdd',totalAdd);
				
				var sumarIVA;
				if(nuevoRegistro.data.porc_impuesto == 10)
				{
					sumarIVA = totalAdd / 11;
					var campo = basicForm.findField('iva_10_display');
					if(campo)
						campo.setValue(campo.getValue() + sumarIVA);
				}
				else if(nuevoRegistro.data.porc_impuesto == 5)
				{
					sumarIVA = totalAdd / 21;
					var campo = basicForm.findField('iva_5_display');
					if(campo)
						campo.setValue(campo.getValue() + sumarIVA);
				}
				else
				{
					sumarIVA = 0;
					var campo = basicForm.findField('iva_exenta_display');
					if(campo)
						campo.setValue(campo.getValue() + sumarIVA);
				}
				
				//aplicar a los campos
				var total = basicForm.findField('valor_total_trans_display');
				if(total)
				{
					console.log(total);
					total.setValue(total.getValue() + totalAdd);
				}
				
				var total_iva = basicForm.findField('total_iva_display');
				if(total_iva)
				{
					total_iva.setValue(total_iva.getValue() + sumarIVA);
				}
			}
		 			
			
			
			//ceramos el formulario de articulo
			if(bloque)
			{
				var bloques = bloque.findByType('field',false);
				for(var x=0; x<bloques.length; x++)
				{
					if(bloques[x].xtype == 'combo')
					{
						bloques[x].clearValue();
						if(bloques[x].hiddenName == 'stock_articulo_id_codigo')
							bloques[x].focus();
					}
					else if(bloques[x].xtype == 'numberfield')
					{
						bloques[x].setValue(null);
					}
				}
			}
		}
		else//no se valido insercion
		{
			Ext.Msg.alert('Aviso','Hubo un error. Intentelo de nuevo.');
		}
		
	}
	
	//desenmascar grilla y container
	if(bloque)
	{
		bloque.getEl().unmask();
	}
				
	
	if(grilla)
		grilla.getEl().unmask();
			
};

agregarArticuloCompra = function(b, e)
{
	//verificar formulario
	var formulario = Ext.getCmp('mainForm');
	if(formulario)
	{
		var basicForm = formulario.getForm();
		 
		if(basicForm.isValid())
		{
			
			//verificamos valores individuales obligatorios que son 
			var c1 = basicForm.findField('stock_articulo_id_codigo');
			var c2 = basicForm.findField('stock_articulo_id_rcap');
			var c3 = basicForm.findField('cantidad');
			var c4 = basicForm.findField('costo_unit');
			var c5 = basicForm.findField('porcentaje_impuesto');
			var c6 = basicForm.findField('cont_moneda_id');
			
			if(c1.getValue() == '')
			{
				Ext.Msg.alert('Aviso','Debe seleccionar un producto');
				return;
			}
			
			if(c2.getValue() == '')
			{
				Ext.Msg.alert('Aviso','Debe seleccionar un producto');
				return;
			}
			
			
			if(c3.getValue() == '')
			{
				Ext.Msg.alert('Aviso','Debe seleccionar una cantidad');
				return;
			}
			
			if(c4.getValue() == '')
			{
				Ext.Msg.alert('Aviso','Debe seleccionar un costo unitario');
				return;
			}
			
			if(c5.getValue() == '')
			{
				Ext.Msg.alert('Aviso','El producto debe tener un porcentaje de impuesto definido');
				return;
			}

			if(c6.getValue() == '')
			{
				Ext.Msg.alert('Aviso','Debe seleccionar una moneda');
				return;
			}
			
			var valores = basicForm.getFieldValues();
			
			console.log('valores',valores);
			
			//verificamos que ese articulo no este en la grilla
			var id = valores.stock_articulo_id_codigo;
			//buscamos
			var record = mainStore.getById(id);
			if(record)
			{
				Ext.Msg.alert('Aviso','Ese articulo ya se encuentra en la compra');
				return;
			}
			
			//obtenemos los valores que me interesan
			var datos = {
				cantidad: valores.cantidad,
				costo_unit: valores.costo_unit,
				stock_articulo_id: valores.stock_articulo_id_codigo,
				porc_impuesto: valores.porcentaje_impuesto,
				cont_moneda_id: valores.cont_moneda_id
			};
			
			//hacemos request enmascarando bloque de articulo y bloque de grilla
			//mainGrid
			//bloqueArticulo
			
			var bloque = Ext.getCmp('bloqueArticulo');
			if(bloque)
				bloque.getEl().mask('Agregando .. ');
				
			var grilla = Ext.getCmp('mainGrid');
			if(grilla)
			{
			 	grilla.getEl().mask('Agregando..');
			}
			
			//aca hacemos la solicitud y manejamos la respuesta en CB
			Ajax.PostElement.request({
				url: baseURL + '/fact/compra/validate',
				callback: agregarArticuloCompraCallback,
				jsonData: datos
			});		
			
		}
		else
			Ext.Msg.alert('Aviso','Debe completar todos los campos');
	}
};

verDetallesProveedor = function(b,e)
{
	//obtenemos los campos del formulario
	var formulario = Ext.getCmp('mainForm');
	if(formulario)
	{
		var basicForm = formulario.getForm();
		var valores = basicForm.getFieldValues();
		
		if(valores.org_parte_id_buscar)
		{
			//mi store es orgRolParteStore
			//obtenemos record
			var registro = orgRolParteStore.getById(valores.org_parte_id_buscar);
			console.log(registro);
		}
		else
			Ext.Msg.alert('Aviso','Debe seleccionar un proveedor');
	}
};


agregarProveedorHandlerCallback = function(success, rawData)
{
	console.log('agregarArticuloHandlerCallback',success, rawData);
	//obtener id
	if(success)
	{
		var respuestaID = Ext.decode(rawData.responseText);
		if(respuestaID.length > 0)
		{
			respuestaID = respuestaID[0];
			
			console.log('respuestaID',respuestaID);
			
			orgRolParteStore.load({
				params:{
					's[org_parte_rol_id]':respuestaID.org_parte_rol_id,
					's[nombre]': null
				},
				callback: function(records, options, success)
				{
					console.log('cb agregar store proveedor',records, options, success);
					
					if(records.length == 0)
					{
						Ext.Msg.alert('Aviso','No se encontro proveedor. Recargue la pagina');
						return;
					}
					
					var record = records[0];
					
					if(success)
					{
						//buscamos el campo org_parte_id_buscar y seteamos el valor correspondiente de proveedor
						var formulario = Ext.getCmp('mainForm');
						if(formulario)
						{
							var basicForm = formulario.getForm();
		
							var campo = basicForm.findField('org_parte_id_buscar');	
							if(campo)
								campo.setValue(record.data.org_parte_rol_id);
								
							campo = basicForm.findField('displayDocumento');	
							if(campo)
								campo.setValue(record.data.mostrarDocumentos);
								
							campo = basicForm.findField('displayNombre');	
							if(campo)
								campo.setValue(record.data.mostrarNombre);
						}					
					}
					else
					{
						Ext.Msg.alert('Aviso','Hubo un error definiendo Proveedor');
					}
				}
			});
		}
	}
	else
	{
		Ext.Msg.alert('Aviso','Ocurrio un error al agregar Proveedor');
	}
	
};

agregarProveedor = function(b,e)
{
	console.log('agregarProveedor');
	//obtenemos los campos del formulario
	var formulario = Ext.getCmp('mainForm');
	if(formulario)
	{
		var basicForm = formulario.getForm();
		
		var campo = basicForm.findField('org_parte_id_buscar');
		campo.clearValue();
		
		campo = basicForm.findField('displayNombre');
		campo.setValue(null);
		
		campo = basicForm.findField('displayDocumento');
		campo.setValue(null);
		
		//abrimos ventana de creacion
		ventanaModal.add(formularioOrgParte(true, null, false, true, agregarProveedorHandlerCallback));
		ventanaModal.doLayout();
		ventanaModal.show();
	}
};


agregarArticuloHandlerCallback = function(success, rawData)
{
	console.log('success, rawData',success, rawData);
	if(success)
	{
		var bloque = Ext.getCmp('bloqueArticulo');
		if(bloque)
			bloque.getEl().mask('Cargando...');
		var respuesta = Ext.decode(rawData.responseText);
		var id = respuesta.stock_articulo_id;
		
		//cargo el store con este dato
		stockArticuloStore.load({
			params:{
				's[id]':id,
				's[cadena]': null,
				's[rcap]':null
			},
			callback: function(records, options, success)
			{
				console.log('records',records);
				if(records.length == 0)
				{
					Ext.Msg.alert('Aviso','No se encontro registro. Intentelo de nuevo');
					return;
				}
				
				var record = records[0];
				
				if(success)
				{
					var formulario = Ext.getCmp('mainForm');
					if(formulario)
					{
						console.log('inside main form y record', record);
						//seteamos en el form
						var basicForm = formulario.getForm();
						//obtener campo1 y setear valor
						var campo1 = basicForm.findField('stock_articulo_id_codigo');
						console.log('campo1',campo1);
						if(campo1)
						{
							campo1.setValue(record.data.stock_articulo_id);
						}
						
						var campo2 = basicForm.findField('stock_articulo_id_rcap');
						console.log('campo2',campo2);
						if(campo2)
						{
							campo2.setValue(record.data.stock_articulo_id);
						}
						
						var iva = basicForm.findField('porcentaje_impuesto');
						if(iva)
						{
							iva.setValue(record.data.porcentaje_impuesto);
						}
						
						
					
					}
				}
				else
				{
					Ext.Msg.alert('Aviso','No se encontro articulo');
				}
				
				var bloque = Ext.getCmp('bloqueArticulo');
					if(bloque)
						bloque.getEl().unmask();
			}
		});
			
	}
};

agregarArticuloHandler = function(b,e)
{
	var formulario = Ext.getCmp('mainForm');
	if(formulario)
	{
		var basicForm = formulario.getForm();
		
		var campo1 = basicForm.findField('stock_articulo_id_codigo');
		var campo2 = basicForm.findField('stock_articulo_id_rcap');
		//solo podemos ver si tenemos articulo seleccionado
		if(campo1)
			campo1.setValue(null);
		if(campo2)
			campo2.setValue(null);
				
			//creamos ventana modal
			//anhadimos formulario pero antes obtenemos registro
			
		ventanaModal.add(formularioStockArticulo(true, null, false, true, agregarArticuloHandlerCallback));
		ventanaModal.doLayout();
		ventanaModal.show();
			
	}
};

verDetallesArticuloHandlerCallback = function(success, rawData)
{
	var bloque = Ext.getCmp('bloqueArticulo');
	if(bloque)
		bloque.getEl().unmask();
		
	if(success)
	{
		var data = Ext.decode(rawData.responseText);
		
		stockArticuloStore.reload({
			callback: function(records, options, success){
				console.log('cb view', records, options, success);
				
				
				if(records.length == 0)
				{
					Ext.Msg.alert('Aviso','No se encontro articulo. Intentelo de nuevo');
				}
				else
				{
				
				var record = records[0];
				
				console.log('record en view',record);
				
				if(success)
				{
					var formulario = Ext.getCmp('mainForm');
					if(formulario)
					{
						console.log('inside main form');
						//seteamos en el form
						var basicForm = formulario.getForm();
						
						console.log('basicForm',basicForm);
						
						//obtener campo1 y setear valor
						var campo1 = basicForm.findField('stock_articulo_id_codigo');
						console.log('campo1',campo1);
						if(campo1)
						{
							campo1.setValue(record.data.stock_articulo_id);
						}
						
						var campo2 = basicForm.findField('stock_articulo_id_rcap');
						console.log('campo2',campo2);
						if(campo2)
						{
							console.log('in');
							campo2.setValue(record.data.stock_articulo_id, campo2.getStore());
						}
						
						var iva = basicForm.findField('porcentaje_impuesto');
						console.log('iva', iva);
						if(iva)
						{
							
							iva.setValue(record.data.porcentaje_impuesto);
						}
					
					}
				}
				else
				{
					Ext.Msg.alert('Aviso','No se encontro articulo');
				}
				
				}
			}
		});
		
			
	}
	
	var bloque = Ext.getCmp('bloqueArticulo');
	if(bloque)
		bloque.getEl().unmask();
};

verDetallesArticuloHandler = function(b,e)
{

	var formulario = Ext.getCmp('mainForm');
	if(formulario)
	{
		var bloque = Ext.getCmp('bloqueArticulo');
		if(bloque)
			bloque.getEl().mask('Cargando...');
			
		var basicForm = formulario.getForm();
		var valores = basicForm.getFieldValues();
		
		//solo podemos ver si tenemos articulo seleccionado
		if(valores.stock_articulo_id_codigo)
		{
			//creamos ventana modal
			//anhadimos formulario pero antes obtenemos registro
			
			Ajax.PostElement.request({
				url: baseURL + '/stock/articulo/get',
				success: function(response, opt){
					var bloque = Ext.getCmp('bloqueArticulo');
					if(bloque)
						bloque.getEl().unmask();
					var data = Ext.decode(response.responseText);
					ventanaModal.add(formularioStockArticulo(false, data, false, true, verDetallesArticuloHandlerCallback));
					ventanaModal.doLayout();
					ventanaModal.show();
				},
				failure: function(){
					var bloque = Ext.getCmp('bloqueArticulo');
					if(bloque)
						bloque.getEl().unmask();
				},
				params:{id: valores.stock_articulo_id_codigo}
			});		
			
		}
		else
		{
			Ext.Msg.alert('Aviso','Seleccione un articulo para poder visualizar sus detalles');
		}
	}
};


function borrarArticulo(id)
{
	var registro = mainStore.getById(id);
	
	if(registro)
	{
		var destino = Ext.getCmp('formContainer');
		if(destino)
		{
			destino.removeAll();
			//hacemos solicitud

			Ext.Msg.confirm('Eliminar','Desea eliminar el elemento ' + registro.data.nombre, function(a,b){
				if(a == 'yes')
				{
					Ajax.PostElement.request({
						url: baseURL + '/stock/articulo/delete',
						success: function(response, opt){
							mainStore.reload();
						},
						jsonData:{'delete':{stock_articulo_id : id}}
					});	
				}
			});
			
		}
	}
}





viewContainer.bodyPanel = [{
	layout: 'fit',
	xtype: 'container',
	autoHeight: true,
	cls: 'fittedContainer',
	items: [
			{
				xtype: 'container',
				autoHeight: true,
				id: 'secondMainContainer',
				layout: 'anchor',
				items:[
						{
							xtype: 'form',
							id: 'mainForm',
							labelAlign: 'right',
							layout: 'anchor',
							items:[
									{
										xtype: 'container',
										html: 'Cargar Compra',
										cls: 'mainTitle'
									},
									{
				       	       			xtype: 'container',
				       	       			itemId: 'compraContainer',
				       	       			cls: 'compraContainer',
				       	       			style:{margin: '10px auto'},
				       	       			layout: 'column',
				       	       			width: 1024,
				       	       			defaults:{cls: 'bloqueFactura azul', xtype: 'container', columnWidth: .33, height: 75},
				       	       			items: [
				       	       					{
				       	       						layout: 'column',
				       	       						height: 35,
				       	       						cls: 'bloqueFactura crema',
				       	       						style:{paddingTop: '5px'},
				       	       						items:[
				       	       								{
				       	       									xtype: 'container',
				       	       									layout: 'form',
				       	       									labelWidth: 75,
				       	       									width: 120,
				       	       									items:[
				       	       											{
				       	       												xtype: 'textfield',
				       	       												width: 35,
				       	       												allowBlank: false,
				       	       												name: 'factura_nro',
				       	       												fieldLabel: 'Factura Nro.'
				       	       											}
				       	       									]
				       	       								},
				       	       								{
				       	       									xtype: 'container',
				       	       									layout: 'form',
				       	       									width: 40,
				       	       									items:[
				       	       											{
				       	       												xtype: 'textfield',
				       	       												hideLabel: true,
				       	       												name: 'factura_nro',
				       	       												allowBlank: false,
				       	       												width: 35
				       	       											}
				       	       									]
				       	       								},
				       	       								{
				       	       									xtype: 'container',
				       	       									layout: 'form',
				       	       									width: 120,
				       	       									items:[
				       	       											{
				       	       												xtype: 'textfield',
				       	       												allowBlank: false,
				       	       												name: 'factura_nro',
				       	       												hideLabel: true,
				       	       												width: 100
				       	       											}
				       	       									]
				       	       								}
				       	       						]
				       	       					},
				       	       					{
				       	       						columnWidth: .34,
				       	       						height: 35,
				       	       						style: {border:'none'},
				       	       						cls: 'bloqueFactura'
				       	       					},
				       	       					{
				       	       						cls: 'bloqueFactura',
				       	       						style: {border:'none'},
				       	       						height: 35
				       	       					},
				       	       					{
				       	       						xtype: 'container',
				       	       						layout: 'column',
				       	       						cls: '',
				       	       						autoHeight:true,
				       	       						defaults:{xtype: 'container'},
				       	       						columnWidth: .67,
				       	       						items:[
				       	       								{
				       	       									layout: 'form',
				       	       									cls: 'bloqueFactura azul',
				       	       									columnWidth: .5,
				       	       									height: 200,
				       	       									items:[
				       	       											{
				       	       												xtype: 'displayfield',
				       	       												hideLabel: true,
				       	       												cls: 'titulo',
				       	       												value: 'Datos Compra'
				       	       											},
				       	       											{
			       															fieldLabel: 'Tipo Operacion',
			        														xtype: 'textfield',
			        														value: 'Compra',
			        														disabled: true
		       															},
		       															{
			       															fieldLabel: 'Estado',
			       															hiddenName: 'estado_factura',
			       															width: 90,
			       															value: 'P',
			       															forceSelection: true,
			       															valueField: 'id',
			       															displayField:'valor',
			       															xtype: 'combo',
			       															store: stockEstadoFacturaStore,
			       															typeAhead:true,
			       															mode:'local',
			       															allowBlank: false
		       															},
				       	       											{
			       															fieldLabel: 'Fecha',
			       															name: 'fecha',
			       															allowBlank: false,
			        														xtype: 'datefield',
			        														value: new Date(),
			        														listeners:{
			        															'change':function(thisEl, newValue, oldValue)
			        															{
			        																if(!newValue)
			        																	thisEl.setValue(oldValue);
			        																	
			        																var padre = thisEl.ownerCt;
			        																var f1, f2, diasDif;
			        																var valorFecha = thisEl.value.split('/');
			        																f1 = new Date(valorFecha[1] + '/' + valorFecha[0] + '/' + valorFecha[2]);
			        																
			        																
			        																var dias = padre.find('name','dias');
			        																if(dias.length>0)
			        																{
			        																	dias = dias[0];
			        																	diasDif = dias.value;
			        																}
			        																
			        																
			        																var fecha_vencimiento = padre.find('name','fecha_vencimiento');
			        																if(fecha_vencimiento.length>0)
			        																{
			        																	fecha_vencimiento = fecha_vencimiento[0];
			        																	var valorVenc = thisEl.value;
			        																	if(valorVenc)
			        																	{
			        																		valorVenc = valorVenc.split('/');
			        																		f2 = new Date(valorVenc[1] + '/' + valorVenc[0] + '/' + valorVenc[2]);	
			        																		
			        																		
			        																		f2.setDate(parseInt(f1.getDate()) + parseInt(diasDif));
			        																		
			        																		fecha_vencimiento.setValue(f2);
			        																	}
			        																}
			        															}
			        														}
		       															},
		       															{
		       																fieldLabel: 'Agregar D&iacute;as',
			        														xtype: 'numberfield',
			        														width: 75,
			        														allowBlank: false,
			        														allowNegative: false,
			        														allowDecimals: false,
			        														name: 'dias',
			        														value: 0,
			        														listeners:{
			        															'change':function(thisEl, newValue, oldValue)
			        															{
			        																if(!newValue)
			        																	thisEl.setValue(oldValue);
			        																	
			        																var f1, f2;
			        																
			        																var padre = thisEl.ownerCt;
			        																var fecha = padre.find('name','fecha');
			        																if(fecha.length>0)
			        																{
			        																	fecha = fecha[0];
			        																	var valorFecha = fecha.value;
			        																	
			        																	if(valorFecha)
			        																	{
			        																		valorFecha = valorFecha.split('/');
			        																		f1 = new Date(valorFecha[1] + '/' + valorFecha[0] + '/' + valorFecha[2]);	
			        																	}
			        																	else
			        																	{
			        																		Ext.Msg.alert('Aviso','Compra sin Fecha');
			        																		return;
			        																	}
			        																}
			        																
			        																var fecha_vencimiento = padre.find('name','fecha_vencimiento');
			        																if(fecha_vencimiento.length>0)
			        																{
			        																	fecha_vencimiento = fecha_vencimiento[0];
			        																	var valorVenc = fecha.value;
			        																	if(valorVenc)
			        																	{
			        																		valorVenc = valorVenc.split('/');
			        																		f2 = new Date(valorVenc[1] + '/' + valorVenc[0] + '/' + valorVenc[2]);	
			        																		
			        																		f2.setDate(f1.getDate() + newValue);
			        																		
			        																		fecha_vencimiento.setValue(f2);
			        																	}
			        																}
			        																
			        																
			        															}
			        														}
		       															},
		       															{
		       																fieldLabel: 'Fecha Venc.',
			        														xtype: 'datefield',
			        														disabled: true,
			        														name: 'fecha_vencimiento',
			        														listeners:{
			        															'render':function(thisEl)
			        															{
			        																var padre = thisEl.ownerCt;
			        																var fecha = padre.find('name','fecha');
			        																if(fecha.length>0)
			        																{
			        																	fecha = fecha[0];
			        																	thisEl.value = fecha.value;
			        																}
			        															}
			        														}
		       															},
				       	       											{
			       															fieldLabel: 'Moneda',
			       															hiddenName: 'cont_moneda_id',
			       															width: 90,
			       															forceSelection:true,
			       															valueField: 'cont_moneda_id',
			       															displayField:'simbolo',
			       															xtype: 'combo',
			       															store: contMonedaStore,
			       															typeAhead:true,
			       															mode:'local',
			       															allowBlank: false,
			       															listeners:{
			       																'select':function(thisCmp, record, index)
			       																{
			       																	thisCmp.setReadOnly(true);
			       																	console.log('record',record);
			       																	
			       																	monedaDecimales = (record.data.permite_decimal == 'S')?(true):(false);
																					cantDecimalesMoneda = record.data.cnt_decimales;
																					
																					console.log(monedaDecimales,cantDecimalesMoneda);
																					
																					//en base a esto modifico mi cantidad
																					var formulario = Ext.getCmp('mainForm');
																					if(formulario)
																					{
																						var basicForm = formulario.getForm();
																						
																						//definir campo de moneda display
																						var monedaDisplay = basicForm.findField('moneda_display');
																						if(monedaDisplay)
																						{
																							monedaDisplay.setValue(record.data.nombre);
																						}
																						
																						var costo_unit = basicForm.findField('costo_unit');
																						
																						var nuevoNumbers = {
				       	       																		xtype: 'numberfield',
				       	       																		width: 90,
				       	       																		allowNegative: false,
				       	       																		allowDecimals: monedaDecimales,
				       	       																		decimalPrecision: cantDecimalesMoneda,
				       	       																		name: 'costo_unit',
				       	       																		fieldLabel: 'Costo Unit.'
				       	       																	};
																						
																						
																						console.log(costo_unit);
																						if(costo_unit)
																						{
																							var padre = costo_unit.ownerCt;
																							padre.remove(costo_unit);
																							padre.add(nuevoNumbers);
																							padre.doLayout();
																						}
																					}
			       																}
			       															}
		       															}
				       	       									]
				       	       								},
				       	       								{
				       	       									columnWidth: .5,
				       	       									layout: 'form',
				       	       									cls: 'bloqueFactura azul',
				       	       									height: 200,
				       	       									items:[
				       	       											{
				       	       												xtype: 'displayfield',
				       	       												hideLabel: true,
				       	       												cls: 'titulo',
				       	       												value: 'Proveedor'
				       	       											},
				       	       											{
				       	       												xtype: 'combo',
																			fieldLabel: 'RUC / Nombre',
																			cls: 'searchIcon',
																			hideTrigger: true,
																			width: 210,
																			allowBlank: false,
																			minChars: 2,
																			cls: 'searchIcon',
																			displayField: 'mostrar',
																			valueField: 'org_parte_rol_id',
																			forceSelection: true,
																			mode: 'remote',
																			triggerAction: 'all',
																			listWidth: 350,
																			queryDelay: 1000,
																			queryParam: 's[nombre]',
																			store: orgRolParteStore,
																			hiddenName: 'org_parte_id_buscar',
																			listeners:{
																				'select':function(thisField, record, index)
																				{
																					
																					//si selecciono algo tengo que poner en los campos dependientes
																					//busco ambos campos
																					var padre = thisField.ownerCt;
																					var displayNombre = padre.find('name','displayNombre');
																					var displayDocumento = padre.find('name','displayDocumento');
																					
																					console.log(displayNombre,displayDocumento,record.data)
																					
																					if(displayNombre.length>0)
																					{
																						displayNombre = displayNombre[0];
																						
																						displayNombre.setValue(record.data.mostrarNombre);
																					}
																					
																					if(displayDocumento.length>0)
																					{
																						displayDocumento = displayDocumento[0];
																						displayDocumento.setValue(record.data.mostrarDocumentos);
																					}
																					
																					
																				},
																				'change':function(thisField, newValue, oldValue)
																				{
																					if(!newValue)
																					{
																						var padre = thisField.ownerCt;
																						var displayNombre = padre.find('name','displayNombre');
																						var displayDocumento = padre.find('name','displayDocumento');
																					
																						if(displayNombre.length>0)
																						{
																							displayNombre = displayNombre[0];
																							displayNombre.setValue(null);
																						}
																					
																						if(displayDocumento.length>0)
																						{
																							displayDocumento = displayDocumento[0];
																							displayDocumento.setValue(null);
																						}
																					}
																				}
																			}
																			
				       	       											},
				       	       											{
				       	       												xtype: 'textfield',
				       	       												width: 180,
				       	       												fieldLabel: 'Documento',
				       	       												name: 'displayDocumento',
				       	       												disabled: true
				       	       											},
				       	       											{
				       	       												xtype: 'textfield',
				       	       												fieldLabel: 'Nombre o Raz. Social',
				       	       												name: 'displayNombre',
				       	       												width: 180,
				       	       												disabled: true
				       	       											},
				       	       											{
				       	       												xtype: 'container',
				       	       												layout: 'column',
				       	       												defaults:{style:{margin: '0 5px'}},
				       	       												items:[
				       	       														{
				       	       															xtype: 'button',
				       	       															handler: verDetallesProveedor,
				       	       															text: 'Ver Detalles'
				       	       														},
				       	       														{
				       	       															xtype: 'button',
				       	       															iconCls: 'addIcon',
				       	       															text: 'Agregar Proveedor',
				       	       															handler: agregarProveedor
				       	       														}
				       	       												]
				       	       											}
				       	       									]
				       	       								},
				       	       								{
				       	       									layout: 'form',
				       	       									height: 180,
				       	       									cls: 'bloqueFactura azul',
				       	       									id: 'bloqueArticulo',
				       	       									columnWidth: 1,
				       	       									items:[
				       	       											{
				       	       												xtype: 'displayfield',
				       	       												hideLabel: true,
				       	       												cls: 'titulo',
				       	       												value: 'Articulo'
				       	       											},
				       	       											{
				       	       												xtype: 'combo',
																			fieldLabel: 'Codigo / Nombre',
																			cls: 'searchIcon',
																			hideTrigger: true,
																			width: 475,
																			minChars: 2,
																			cls: 'searchIcon',
																			displayField: 'mostrar',
																			valueField: 'stock_articulo_id',
																			forceSelection: true,
																			mode: 'remote',
																			triggerAction: 'all',
																			listWidth: 500,
																			queryDelay: 1000,
																			queryParam: 's[cadena]',
																			store: stockArticuloStore,
																			hiddenName: 'stock_articulo_id_codigo',
																			listeners:{
																				'beforequery':function(objectQuery)
																				{
																					objectQuery.combo.getStore().setBaseParam('s[rcap]',null);
																				},
																				'beforeselect':function(thisCombo, record, index)
																				{
																					//reseteo el otro campo
																					var padre = thisCombo.ownerCt;
																					var otroCombo = padre.find('hiddenName','stock_articulo_id_rcap');
																					if(otroCombo.length>0)
																					{
																						otroCombo = otroCombo[0];
																						otroCombo.setValue(null);
																					}
																				},
																				'select':function(thisField, record, index)
																				{
																					//reseteo el otro campo
																					var padre = thisField.ownerCt;
																					var otroCombo = padre.find('hiddenName','stock_articulo_id_rcap');
																					if(otroCombo.length>0)
																					{
																						otroCombo = otroCombo[0];
																						otroCombo.setValue(record.data.stock_articulo_id);
																					}
																					
																					
																					var cantidad = padre.find('name','cantidad');
																					if(cantidad.length>0)
																					{
																						cantidad = cantidad[0];
																						cantidad.focus(true,true);
																					}
																					
																					var existencia = padre.find('name','existencia');
																					if(existencia.length>0)
																					{
																						existencia = existencia[0];
																						existencia.setValue(record.data.existencia);
																					}
																					
																					var iva = padre.find('hiddenName','porcentaje_impuesto');
																					if(iva.length>0)
																					{
																						iva = iva[0];
																						iva.setValue(record.data.porcentaje_impuesto);
																					}
																				},
																				'change':function(thisField, newValue, oldValue)
																				{
																					if(!thisField.isValid())
																					{
																						thisField.focus(true,true);
																					}
																				}
																			}
																			
				       	       											},
				       	       											{
				       	       												xtype: 'combo',
																			fieldLabel: 'Cod. Ref. Prov',
																			cls: 'searchIcon',
																			hideTrigger: true,
																			width: 475,
																			minChars: 2,
																			cls: 'searchIcon',
																			displayField: 'rcap',
																			valueField: 'stock_articulo_id',
																			forceSelection: true,
																			mode: 'remote',
																			triggerAction: 'all',
																			listWidth: 500,
																			queryDelay: 1000,
																			queryParam: 's[rcap]',
																			store: stockArticuloStore,
																			hiddenName: 'stock_articulo_id_rcap',
																			listeners:{
																				'beforequery':function(objectQuery)
																				{
																					objectQuery.combo.getStore().setBaseParam('s[cadena]',null);
																				},
																				'beforeselect':function(thisCombo, record, index)
																				{
																					//reseteo el otro campo
																					var padre = thisCombo.ownerCt;
																					var otroCombo = padre.find('hiddenName','stock_articulo_id_codigo');
																					if(otroCombo.length>0)
																					{
																						otroCombo = otroCombo[0];
																						otroCombo.setValue(null);
																					}
																				},
																				'select':function(thisField, record, index)
																				{
																					//reseteo el otro campo
																					var padre = thisField.ownerCt;
																					var otroCombo = padre.find('hiddenName','stock_articulo_id_codigo');
																					if(otroCombo.length>0)
																					{
																						otroCombo = otroCombo[0];
																						otroCombo.setValue(record.data.stock_articulo_id);
																					}
																					
																					var cantidad = padre.find('name','cantidad');
																					if(cantidad.length>0)
																					{
																						cantidad = cantidad[0];
																						cantidad.focus(true,true);
																					}
																					
																					var existencia = padre.find('name','existencia');
																					if(existencia.length>0)
																					{
																						existencia = existencia[0];
																						existencia.setValue(record.data.existencia);
																					}
																					
																					var iva = padre.find('hiddenName','porcentaje_impuesto');
																					if(iva.length>0)
																					{
																						iva = iva[0];
																						iva.setValue(record.data.porcentaje_impuesto);
																					}
																					
																				},
																				'change':function(thisField, newValue, oldValue)
																				{
																					if(!thisField.isValid())
																					{
																						thisField.focus(true,true);
																					}
																				}
																			}
																			
				       	       											},
				       	       											{
				       	       												xtype: 'container',
				       	       												layout: 'column',
				       	       												items:[
				       	       														{
				       	       															xtype: 'container',
				       	       															layout: 'form',
				       	       															columnWidth: .29,
				       	       															items:[
				       	       																	{
				       	       																		xtype: 'numberfield',
				       	       																		width: 50,
				       	       																		allowNegative: false,
				       	       																		allowDecimals: false,
				       	       																		minValue: 1,
				       	       																		name: 'cantidad',
				       	       																		fieldLabel: 'Cantidad'
				       	       																	},
				       	       																	{
				       	       																		xtype: 'numberfield',
				       	       																		width: 90,
				       	       																		allowNegative: false,
				       	       																		readOnly: true,
				       	       																		name: 'costo_unit',
				       	       																		emptyText: 'Seleccione moneda..',
				       	       																		fieldLabel: 'Costo Unit.'
				       	       																	}
				       	       															]
				       	       														},
				       	       														{
				       	       															xtype: 'container',
				       	       															layout: 'form',
				       	       															columnWidth: .36,
				       	       															style:{marginTop:'5px'},
				       	       															items:[
				       	       																	{
				       	       																		xtype: 'numberfield',
				       	       																		width: 80,
				       	       																		disabled:true,
				       	       																		name: 'existencia',
				       	       																		fieldLabel: 'En Stock'
				       	       																	},
				       	       																	{
				       	       																		xtype: 'numberfield',
				       	       																		width: 80,
				       	       																		disabled:true,
				       	       																		name: 'costo_ref',
				       	       																		fieldLabel: 'Costo Ref.'
				       	       																	},
				       	       																	{
			       																					fieldLabel: '%IVA',
			       																					hiddenName: 'porcentaje_impuesto',
			       																					forceSelection: true,
			       																					xtype: 'combo',
			       																					triggerAction: 'all',
			       																					store: stockImpuestoStore,
			       																					readOnly: true,
			      																					displayField: 'valor',
			       																					valueField: 'id',
			       																					mode: 'local',
			       																					width: 75
		       																					}
				       	       															]
				       	       														},
				       	       														{
				       	       															xtype: 'container',
				       	       															layout: 'column',
				       	       															columnWidth: .35,
				       	       															items:[
				       	       																	{
				       	       																		xtype: 'container',
				       	       																		width: 80,
				       	       																		layout: 'form',
				       	       																		defaults:{style:{margin:'3px 0'}},
				       	       																		items:[
				       	       																				{
				       	       																					xtype: 'button',
				       	       																					width: 75,
				       	       																					iconCls: '',
				       	       																					handler: verDetallesArticuloHandler,
				       	       																					text: 'Detalles'
				       	       																				},
				       	       																				{
				       	       																					xtype: 'button',
				       	       																					width: 75,
				       	       																					iconCls: 'addIcon',
				       	       																					handler: agregarArticuloHandler,
				       	       																					text: 'Articulo'
				       	       																				}
				       	       																		]
				       	       																	},
				       	       																	{
				       	       																		xtype: 'container',
				       	       																		columnWidth: 1,
				       	       																		defaults:{style:{margin:'3px 0'}},
				       	       																		layout: 'form',
				       	       																		items:[
				       	       																				{
				       	       																					xtype: 'button',
				       	       																					iconCls: 'cart',
				       	       																					width: 75,
				       	       																					height: 70,
				       	       																					handler: agregarArticuloCompra,
				       	       																					text: 'Agregar'
				       	       																				}
				       	       																		]
				       	       																	}
				       	       															]
				       	       														}
				       	       												]
				       	       											}
				       	       									]
				       	       								}
				       	       							]
				       	       					},	
				       	       					{
				       	       						xtype: 'container',
				       	       						layout: 'anchor',
				       	       						cls: '',
				       	       						defaults:{xtype: 'container'},
				       	       						autoHeight:true,
				       	       						columnWidth: .33,
				       	       						style:{color:'white', fontWeight:'bold'},
				       	       						items:[
				       	       								{
				       	       									layout: 'form',
				       	       									labelWidth: 130,
				       	       									cls: 'bloqueFactura azulOscuro',
				       	       									height: 215,
				       	       									items:[
				       	       											{
				       	       												xtype: 'displayfield',
				       	       												value: 'Total Compra',
				       	       												style:{backgroundColor:'#00CCFF', color: 'black'},
				       	       												cls: 'titulo',
				       	       												hideLabel: true
				       	       											},
				       	       											{
				       	       												xtype: 'container',
				       	       												defaults:{xtype: 'numberfield', disabled: true},
				       	       												layout: 'form',
				       	       												items:[
				       	       														{
				       	       															fieldLabel: '<span style="text-decoration:underline; ">Valor Total Trans.</span>',
				       	       															name: 'valor_total_trans_display',
				       	       															value: 0
				       	       														},
				       	       														{
				       	       															fieldLabel: 'Moneda',
				       	       															name: 'moneda_display',
				       	       															xtype: 'textfield'
				       	       														},
				       	       														{
				       	       															fieldLabel: 'IVA 10%',
				       	       															name: 'iva_10_display',
				       	       															value: 0
				       	       														},
				       	       														{
				       	       															fieldLabel: 'IVA 5%',
				       	       															name: 'iva_5_display',
				       	       															value: 0
				       	       														},
				       	       														{
				       	       															fieldLabel: 'IVA Exenta',
				       	       															name: 'iva_exenta_display',
				       	       															value: 0
				       	       														},
				       	       														{
				       	       															fieldLabel: 'Total IVA',
				       	       															name: 'total_iva_display',
				       	       															value: 0
				       	       														}
				       	       												]
				       	       											}
				       	       									]
				       	       								},
				       	       								{
				       	       									layout: 'column',
				       	       									cls: '',
				       	       									height: 110,
				       	       									items:[
				       	       											{
				       	       												xtype: 'container',
				       	       												layout: 'form',
				       	       												width: 130,
				       	       												items:[
				       	       														{
				       	       															xtype: 'container',
				       	       															html: '&nbsp;'
				       	       														}
				       	       												]
				       	       											},
				       	       											{
				       	       												xtype: 'container',
				       	       												layout: 'form',
				       	       												width: 100,
				       	       												items:[
				       	       														{
					       	       			        									xtype: 'button',
					       	       			        									width: 85,
					       	       			        									style:{margin: '5px 0'},
					       	       			        									iconCls: 'addIcon',
					       	       			        									handler: function(b,e){
				       	       																Ext.Msg.alert('Aviso','En Impl.');
				       	       															},
					       	       			        									text: 'Reset'
																					},
																					{
					       	       			        									xtype: 'button',
					       	       			        									width: 85,
					       	       			        									handler: function(b,e){
				       	       																Ext.Msg.alert('Aviso','En Impl.');
				       	       															},
					       	       			        									style:{margin: '5px 0'},
					       	       			        									iconCls: 'addIcon',
					       	       			        									text: 'Cancelar'
																					}
				       	       												]
				       	       											},
				       	       											{
				       	       												xtype: 'container',
				       	       												layout: 'form',
				       	       												width: 100,
				       	       												items:[
				       	       														{
					       	       			        									xtype: 'button',
					       	       			        									height: 50,
					       	       			        									style:{margin: '5px 0'},
					       	       			        									width: 95,
					       	       			        									iconCls: 'addIcon',
					       	       			        									text: 'Guardar',
					       	       			        									handler: guardarCompraHandler
																					}
				       	       												]		
				       	       											}
				       	       									]
				       	       								}
				       	       						]
				       	       					},
				       	       					{
				               						xtype: 'grid',
				               						autoHeight: true,
				               						columnWidth: 1,
				               						id: 'mainGrid',
				               						stripeRows: true,
				               						loadMask: true,
				               						sm: new Ext.grid.CellSelectionModel(),
				               						viewConfig: {
				               					        forceFit: true,
				               					        emptyText: 'Sin Registros',
				               					        loadingText: 'Cargando .. '
				               						},
				               						store: mainStore,
				               						cm: new Ext.grid.ColumnModel([
				               							{ header: "Quitar", fixed:true, dataIndex: 'categoria',  width: 40, renderer: function(v,meta,record){
				               								return '<div class="deleteIcon" onclick="quitarArticuloCompra(' + record.data.stock_articulo_id +');"></div>';
				               							}},
				               							{ header: "Cant.", fixed: true, dataIndex: 'cantidad',  width: 80},
														{ header: "Descrip.", dataIndex: 'articulo', width: 160},
														{ header: "Costo Unit.", dataIndex: 'costo_unit',  width: 100},
														{ header: "Exenta", dataIndex: null,  width: 100, renderer: function(v,meta,record){
															if(record.data.porc_impuesto == 0)
																return record.data.cantidad * record.data.costo_unit;
															else
																return '-';
														}},
														{ header: "5%", dataIndex: null,  width: 100, renderer: function(v,meta,record){
															if(record.data.porc_impuesto == 5)
																return record.data.cantidad * record.data.costo_unit;
															else
																return '-';
														}},
														{ header: "10%", dataIndex: null,  width: 100, renderer: function(v,meta,record){
															if(record.data.porc_impuesto == 10)
																return record.data.cantidad * record.data.costo_unit;
															else
																return '-';
														}}
													])
				           						}
				       	       			]
				       	   			},
				       	   			{
				       	       			xtype: 'toolbar',
				       	       			layout: 'toolbar',
				       	       			cls: 'pagingContainer',
				       	       			items:[
				       	       			]
				       	   			}
							]
						}
						
						
						/*,
						{
							xtype: 'container',
							columnWidth: .35,
							layout: 'anchor',
							items:[
			    					{
			    						xtype: 'container',
			    						layout: 'anchor',
			    						cls: 'oculto',
			    						id: 'messageBox',
			    						items:[
			    						       {
			        						       xtype: 'container',
			    						    	   html: 'Generico'
			    						       }
			    					
			   	    					]
			    					},
							       {
									     xtype: 'container',
									     layout: 'anchor',
									     id: 'formContainer'
							       }
							]
						}*/
				]
			}
	]
}];
</script>